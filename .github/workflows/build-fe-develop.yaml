name: Build FE Develop 
on:
  push:
    branches:
      - dev
    paths-ignore:
      - '**.md'
env:
  ECR_DOMAIN: ${{ secrets.STAG_ECR_DOMAIN }}
  ECR_REPO: linebase/lb-fe
  IMAGE_TAG: develop-${{ github.run_number }}

jobs:
  build:
    name: Build docker image
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: setup env
        run: |
          mv .env.develop .env
          cat .env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.STAG_AWS_ECR_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.STAG_AWS_ECR_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        run: |
          docker build -t $ECR_DOMAIN/$ECR_REPO:$IMAGE_TAG .
          docker push $ECR_DOMAIN/$ECR_REPO:$IMAGE_TAG

  deploy:
    name: Deploy LB FE 
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Setup ssh
        env:
          PRIV_KEY: ${{ secrets.SSH_PRIV_KEY }}
        run: |
          echo "$PRIV_KEY" > id_rsa
          chmod 600 id_rsa
      - name: Get key login 
        run: |
          mkdir key
          aws ecr get-login-password --region ap-southeast-1 > key/.key-login
          echo ${{ secrets.STAG_ECR_DOMAIN }} > key/.domain
          echo "IMAGE_TAG=$IMAGE_TAG" > key/.env
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.STAG_AWS_ECR_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.STAG_AWS_ECR_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: 'ap-southeast-1'

      - name: Copy key to server login registry
        run: |
          scp -o StrictHostKeyChecking=no -i id_rsa -r key duydv@165.22.62.79:/home/duydv/
          ssh -o StrictHostKeyChecking=no -i id_rsa duydv@165.22.62.79 'cd key && export KEY=$(cat .key-login) && export ECR_DOMAIN=$(cat .domain) && docker login --username AWS -p $KEY $ECR_DOMAIN'
          ssh -o StrictHostKeyChecking=no -i id_rsa duydv@165.22.62.79 'cd key && sudo cp .env /data/sources/lb-frontend/.env'
          rm -rf key

      - name: pull image and start docker-compose
        run: |
          ssh -o StrictHostKeyChecking=no -i id_rsa duydv@165.22.62.79 'cd /data/sources/lb-frontend/ && docker-compose pull '
          ssh -o StrictHostKeyChecking=no -i id_rsa duydv@165.22.62.79 'cd /data/sources/lb-frontend/ && docker-compose up -d'
          ssh -o StrictHostKeyChecking=no -i id_rsa duydv@165.22.62.79 'cd /data/sources/lb-frontend/ && docker-compose ps'
          ssh -o StrictHostKeyChecking=no -i id_rsa duydv@165.22.62.79 'cd /data/sources/lb-frontend/ && docker-compose logs --tail 100'          
